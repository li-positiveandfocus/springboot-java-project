spring.application.name=myfirstwebapp


#/src/main/resources/META-INF/resources/WEB-INF/jsp/sayHello.jsp

#spring/mvc.view.prefix=/src/main/resources/META-INF/resources/WEB-INF/jsp/
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

logging.level.org.springframework=info

Spring.mvc.format.date = yyyy-MM-dd

spring.jpa.defer-datasource-initialization = true

#spring.datasource.url=jdbc:h2:mem:testdb

spring.datasource.url=jdbc:mysql://localhost:3306/todos
spring.datasource.username=todos-user
spring.datasource.password=dummytodos
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#docker run --detach 
#--env MYSQL_ROOT_PASSWORD=dummypassword 
#--env MYSQL_USER=todos-user 
#--env MYSQL_PASSWORD=dummytodos 
#--env MYSQL_DATABASE=todos 
#--name mysql 
#--publish 3306:3306 
#mysql:8-oracle

#// if we use in-memory database, springboot will automatically create a table for us, however for sql, springboot will not
#// to make it happen, spring need to configure a property
spring.jpa.hibernate.ddl-auto=update


